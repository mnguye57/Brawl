Compiled from "AI.java"
public class brawl.model.AI extends brawl.model.Player{
    public brawl.model.AI(brawl.model.enums.BrawlCharacter, brawl.model.enums.PlayerID, int);
    public java.lang.String getNextMove(java.util.List);
    public brawl.model.Move getMove(int);
}

Compiled from "Base.java"
public class brawl.model.Base extends java.lang.Object{
    public brawl.model.Base(brawl.model.enums.PlayerID);
    public brawl.model.enums.PlayerID getOwner();
}

Compiled from "Card.java"
public class brawl.model.Card extends java.lang.Object{
    public brawl.model.Card(brawl.model.enums.Color, brawl.model.enums.CardType);
    public brawl.model.enums.Color getColor();
    public brawl.model.enums.CardType getType();
}

Compiled from "Column.java"
public class brawl.model.Column extends java.lang.Object{
    public brawl.model.Column(brawl.model.Base);
    public brawl.model.Card peekTopCard(brawl.model.enums.PlayerID);
    public void addCard(brawl.model.Card, brawl.model.enums.PlayerID);
    public void freeze();
    public boolean isFrozen();
    public brawl.model.enums.PlayerID getCurrentWinner();
}

Compiled from "Deck.java"
public class brawl.model.Deck extends java.lang.Object{
    public brawl.model.Deck(brawl.model.enums.BrawlCharacter);
    public brawl.model.enums.BrawlCharacter getCharacter();
    public void reset();
    public void shuffle();
    public brawl.model.Card peekDiscard();
    public brawl.model.Card popDiscard();
    public void draw();
    public brawl.model.Deck getDeck();
}

Compiled from "Human.java"
public class brawl.model.Human extends brawl.model.Player{
    public brawl.model.Human(brawl.model.enums.BrawlCharacter, brawl.model.enums.PlayerID, java.util.HashMap);
    public brawl.model.Move getMove(int);
}

Compiled from "Move.java"
public class brawl.model.Move extends java.lang.Object{
    public brawl.model.Move(brawl.model.enums.PlayerID, brawl.model.enums.PlayerID, int);
    public brawl.model.enums.PlayerID getSource();
    public brawl.model.enums.PlayerID getSide();
    public int getColumn();
    public boolean isDraw();
}

Compiled from "Player.java"
public abstract class brawl.model.Player extends java.lang.Object{
    public brawl.model.Player(brawl.model.enums.BrawlCharacter, brawl.model.enums.PlayerID);
    public abstract brawl.model.Move getMove(int);
    public brawl.model.Deck getDeck();
}

Compiled from "ConsoleUI.java"
public class brawl.ui.ConsoleUI extends java.lang.Object implements brawl.ui.GameView{
    public brawl.ui.ConsoleUI();
    public void setController(brawl.GameController);
    public void setMatchModel(brawl.MatchModel);
    public void setSettingsModel(brawl.SettingsModel);
    public void update(java.util.Observable, java.lang.Object);
    public void printGameState();
}

Compiled from "GameScreenUI.java"
public class brawl.ui.GameScreenUI extends java.lang.Object{
    public brawl.ui.GameScreenUI();
    public void realignColumns();
    public void showCountdown(int);
}

Compiled from "GameView.java"
public interface brawl.ui.GameView extends java.util.Observer{
    public abstract void setController(brawl.GameController);
    public abstract void setMatchModel(brawl.MatchModel);
    public abstract void setSettingsModel(brawl.SettingsModel);
    public abstract void update(java.util.Observable, java.lang.Object);
}

Compiled from "MenuScreenUI.java"
public class brawl.ui.MenuScreenUI extends brawl.ui.SwingUI{
    public brawl.ui.MenuScreenUI();
    public void displayOptions();
    public void displayMainMenu();
    public void displayDeckViewer();
    public void update(java.util.Observable, java.lang.Object);
}

Compiled from "SwingUI.java"
public class brawl.ui.SwingUI$CloseListener extends java.awt.event.WindowAdapter{
    public brawl.ui.SwingUI$CloseListener();
    public void windowClosing(java.awt.event.WindowEvent);
}

Compiled from "SwingUI.java"
class brawl.ui.SwingUI$CountdownListener extends java.lang.Object implements java.awt.event.ActionListener{
    javax.swing.JLabel cl;
    int nSeconds;
    final brawl.ui.SwingUI this$0;
    public brawl.ui.SwingUI$CountdownListener(brawl.ui.SwingUI, javax.swing.JLabel, int);
    public void actionPerformed(java.awt.event.ActionEvent);
}

Compiled from "SwingUI.java"
public class brawl.ui.SwingUI extends javax.swing.JFrame implements brawl.ui.GameView{
    public brawl.ui.SwingUI();
    public void init();
    public void setController(brawl.GameController);
    public void setMatchModel(brawl.MatchModel);
    public void setSettingsModel(brawl.SettingsModel);
    public void displayOptionsScreen();
    public void displayIntroScreen();
    public void displayMainMenuScreen();
    public void displayTutorialScreen();
    public void displayDeckViewer();
    public void displayDeckSelectionP1();
    public void displayDeckSelectionP2();
    public void displayCountdownScreen();
    public void displayPlayScreen();
    public void displayQuitScreen();
    public void displayPlayAgainScreen();
    public void countdown321();
    public void update(java.util.Observable, java.lang.Object);
    static javax.swing.Timer access$000(brawl.ui.SwingUI);
    static javax.swing.JPanel access$100(brawl.ui.SwingUI);
}

Compiled from "MoveValidator.java"
final class brawl.utils.MoveValidator$ValidityValue extends java.lang.Enum{
    public static final brawl.utils.MoveValidator$ValidityValue IM;
    public static final brawl.utils.MoveValidator$ValidityValue VM;
    public static final brawl.utils.MoveValidator$ValidityValue CC;
    public static brawl.utils.MoveValidator$ValidityValue[] values();
    public static brawl.utils.MoveValidator$ValidityValue valueOf(java.lang.String);
    static {};
}

Compiled from "MoveValidator.java"
public class brawl.utils.MoveValidator extends java.lang.Object{
    public brawl.utils.MoveValidator();
    public static boolean isValid(brawl.model.Card, brawl.model.Card);
}

